/*
 Student ID: 1101234567
 Name: Chan Tai Man */
/* Query 1 */
Spool result1.lst
SELECT COUNT(*) AS EngineerCount
FROM ENGINEER
JOIN OFFICE ON ENGINEER.OFFICEID = OFFICE.OFFICEID
WHERE OFFICE.ONAME = 'Advanced Computer Vision Institute' AND ENGINEER.ESALARY >= 10000;
Spool off

      /* Query 2 */
Spool result2.lst
Select E.ENGINEERID, E.Ename
from ENGINEER E, RESEARCH R, Project P
where P.projectid = R.projectid and R.ENGINEERID = E.ENGINEERID  and P.PCATEGORY = 'Security'
Order by E.ENGINEERID DESC;
Spool off

            /* Query 3 */
spool result3.lst
SELECT E.ENAME
FROM ENGINEER E, OFFICE O2
WHERE E.ESALARY = (
    SELECT MAX(temp.ESALARY)
    FROM (
        SELECT E2.ENAME, E2.ESALARY
        FROM ENGINEER E2, OFFICE O
        WHERE O.OFFICEID = E2.OFFICEID AND O.ONAME = 'Compatibility Tools Group'
    )  temp
) AND O2.ONAME = 'Compatibility Tools Group'
ORDER BY E.ENAME ASC;
Spool off

            /* Query 4 */
spool result4.lst
      SELECT ANAME, APRICE
FROM (
    SELECT ANAME, APRICE, ROW_NUMBER() OVER (ORDER BY APRICE ASC) AS rn
    FROM APPLICATION
    WHERE APPID IN (
        SELECT APPID
        FROM MAINTAIN
        WHERE ENGINEERID = (
            SELECT ENGINEERID
            FROM ENGINEER
            WHERE ENAME = 'Chan Ling Yun'
        )
    )
)
WHERE rn <= 3
ORDER BY APRICE DESC;
Spool off

/* Query 5 */
spool result5.lst
SELECT APPLICATION.APPID, APPLICATION.ANAME
FROM APPLICATION
JOIN MAINTAIN ON APPLICATION.APPID = MAINTAIN.APPID
GROUP BY APPLICATION.APPID, APPLICATION.ANAME
HAVING COUNT(DISTINCT MAINTAIN.ENGINEERID) >= 2
ORDER BY APPLICATION.APPID DESC;
Spool off


      /* Query 6 */
      spool result6.lst
    SELECT OFFICEID, ONAME
FROM OFFICE
WHERE OFFICEID IN (
    SELECT OFFICEID
    FROM PROJECT
    GROUP BY OFFICEID
    HAVING SUM(PBUDGET) < 20000
)
ORDER BY OFFICEID ASC;
Spool off

      /* Query 7 */
            spool result7.lst
      SELECT PCATEGORY, AVG(HEAD_COUNT) AS AVERAGE_HEAD_COUNT
FROM (
    SELECT P.PCATEGORY, COUNT(R.ENGINEERID) AS HEAD_COUNT
    FROM PROJECT P
    JOIN RESEARCH R ON P.PROJECTID = R.PROJECTID
    GROUP BY P.PCATEGORY, P.PROJECTID
)
GROUP BY PCATEGORY
ORDER BY PCATEGORY DESC;
Spool off

      /* Query 8 */
            spool result8.lst
SELECT E.ENGINEERID, E.ENAME
FROM ENGINEER E
JOIN RESEARCH R ON E.ENGINEERID = R.ENGINEERID
JOIN PROJECT P ON R.PROJECTID = P.PROJECTID
WHERE P.PBUDGET - P.PEXPENDITURE = (
    SELECT MAX(PBUDGET - PEXPENDITURE)
    FROM PROJECT
)
ORDER BY E.ENGINEERID ASC;
Spool off